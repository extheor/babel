{"version":3,"names":["TypeScriptScope","Scope","types","Set","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","ScopeHandler","createScope","flags","declareName","name","bindingType","loc","scope","currentScope","BIND_FLAGS_TS_EXPORT_ONLY","maybeExportDefined","add","BIND_KIND_TYPE","BIND_KIND_VALUE","checkRedeclarationInScope","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_CLASS","isRedeclaredInScope","has","isConst","wasConst","lexical","checkLocalExport","id","topLevelScope","scopeStack"],"sources":["../src/scope.ts"],"sourcesContent":["import { Position } from \"../../util/location\";\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, loc: Position) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(name, bindingType, loc);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n"],"mappings":"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"}